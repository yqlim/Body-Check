/*!
 * BodyCheck
 * (c) 2019 Yong Quan Lim
 * Released under MIT License.
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).BodyCheck=e()}(this,(function(){"use strict";function t(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function e(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function r(t,e){if(t!==e)throw new TypeError("Cannot instantiate an arrow function")}function n(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=[],n=!0,i=!1,a=void 0;try{for(var o,s=t[Symbol.iterator]();!(n=(o=s.next()).done)&&(r.push(o.value),!e||r.length!==e);n=!0);}catch(t){i=!0,a=t}finally{try{n||null==s.return||s.return()}finally{if(i)throw a}}return r}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function i(t){return function(t){if(Array.isArray(t)){for(var e=0,r=new Array(t.length);e<t.length;e++)r[e]=t[e];return r}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var a="function"==typeof Object.assign?Object.assign:function(t){if(null==t)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),r=arguments.length<=1?0:arguments.length-1,n=0;n<r;n++){var i=n+1<1||arguments.length<=n+1?void 0:arguments[n+1];if(null!=i)for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(e[a]=i[a])}return e};function o(t){return"function"!=typeof Object.getOwnPropertySymbols?[]:Object.getOwnPropertySymbols(t)}return function(){function s(){var e=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(t(this,s),n&&!this.isObjectLiteral(n))throw new TypeError('The "cases" parameter must be an object literal.');if(Object.defineProperty(this,"cases",{value:new Map,configurable:!0}),n){for(var i in n)this.addCase(i,n[i]);o(n).forEach(function(t){r(this,e),this.addCase(t,n[t])}.bind(this))}}var c,u,l;return c=s,(u=[{key:"isObjectLiteral",value:function(t){return!!t&&t.constructor===Object}},{key:"isValidConfig",value:function(t){return!(!this.isObjectLiteral(t)||!Object.prototype.hasOwnProperty.call(t,"validator")||"function"!=typeof t.validator||Object.prototype.hasOwnProperty.call(t,"params")&&void 0!==t.params&&!Array.isArray(t.params))}},{key:"hasCase",value:function(t){return this.cases.has(t)}},{key:"getCase",value:function(t){return this.cases.get(t)}},{key:"addCase",value:function(t,e){if(this.hasCase(t))throw new TypeError('Case "'.concat(t.toString(),'" has already been added.'));if(!this.isValidConfig(e))throw new TypeError('BodyCheck config must be an object literal with "validator" property as a function.');return this.cases.set(t,e),this}},{key:"editCase",value:function(t,e){if(!this.hasCase(t))throw new ReferenceError('Case "'.concat(t.toString(),'" is not found.'));if(!this.isObjectLiteral(e))throw new TypeError('The "config" parameter must be an object literal.');if(e=a({},this.getCase(t),e),!this.isValidConfig(e))throw new TypeError('BodyCheck config must be an object literal with "validator" property as a function.');return this.cases.set(t,e),this}},{key:"removeCase",value:function(t){return this.cases.delete(t)}},{key:"clear",value:function(){return this.cases.clear()}},{key:"run",value:function(t){var e=this;return new Promise(function(a,s){var c=this;r(this,e),this.isObjectLiteral(t)?function t(e,a){var o=this,s=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],c=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(c>=a.length)return Promise.resolve(s);var u=n(a[c],2),l=u[0],f=u[1],h=e.getCase(l);if(void 0===h)return Promise.reject(new ReferenceError('Value of "'.concat(l.toString(),'" cannot be validated because its case is not found.')));var y=h.validator,d=h.context,v=h.params,p=void 0===v?[]:v,b=h.error,w=void 0===b?'Validation for case "'.concat(l.toString(),'" failed with this value: ').concat(f.toString()):b;return Promise.resolve(y.call.apply(y,[d,f].concat(i(p)))).catch(Promise.reject.bind(Promise)).then(function(n){return r(this,o),!0!==n&&(!0===s&&(s={}),s[l]="string"==typeof n?n:w),t(e,a,s,c+1)}.bind(this))}(this,Object.keys(t).concat(o(t)).map(function(e){return r(this,c),[e,t[e]]}.bind(this))).then(a).catch(s):s(new TypeError('The "values" parameter must be an object literal.'))}.bind(this))}},{key:"runSync",value:function(t){var e=this;if(!this.isObjectLiteral(t))throw new TypeError('The "values" parameter must be an object literal.');for(var a=Object.keys(t).concat(o(t)).map(function(n){return r(this,e),[n,t[n]]}.bind(this)),s=!0,c=a.length,u=0;u<c;u++){var l=n(a[u],2),f=l[0],h=l[1],y=this.getCase(f);if(void 0===y)throw new ReferenceError('Value of "'.concat(f.toString(),'" cannot be validated because its case is not found.'));var d=y.validator,v=y.context,p=y.params,b=void 0===p?[]:p,w=y.error,g=void 0===w?'Validation for case "'.concat(f.toString(),'" failed with this value: ').concat(h.toString()):w,m=d.call.apply(d,[v,h].concat(i(b)));!0!==m&&(!0===s&&(s={}),s[f]="string"==typeof m?m:g)}return s}},{key:"size",get:function(){return this.cases.size}}])&&e(c.prototype,u),l&&e(c,l),s}()}));